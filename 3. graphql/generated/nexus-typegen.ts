/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from "../src/types"
import * as photon from "@generated/photon"
import { core } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  HeroCreateInput: { // input type
    email: string; // String!
    id?: string | null; // ID
    movies?: NexusGenInputs['MovieCreateManyWithoutMoviesInput'] | null; // MovieCreateManyWithoutMoviesInput
    name?: string | null; // String
  }
  MovieCreateManyWithoutMoviesInput: { // input type
    connect?: NexusGenInputs['MovieWhereUniqueInput'][] | null; // [MovieWhereUniqueInput!]
    create?: NexusGenInputs['MovieCreateWithoutMainHeroInput'][] | null; // [MovieCreateWithoutMainHeroInput!]
  }
  MovieCreateWithoutMainHeroInput: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    released: boolean; // Boolean!
    title: string; // String!
  }
  MovieWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Hero: photon.Hero;
  Movie: photon.Movie;
  Mutation: {};
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  HeroCreateInput: NexusGenInputs['HeroCreateInput'];
  MovieCreateManyWithoutMoviesInput: NexusGenInputs['MovieCreateManyWithoutMoviesInput'];
  MovieCreateWithoutMainHeroInput: NexusGenInputs['MovieCreateWithoutMainHeroInput'];
  MovieWhereUniqueInput: NexusGenInputs['MovieWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Hero: { // field return type
    email: string; // String!
    id: string; // ID!
    movies: NexusGenRootTypes['Movie'][] | null; // [Movie!]
    name: string | null; // String
  }
  Movie: { // field return type
    description: string | null; // String
    id: string; // ID!
    mainHero: NexusGenRootTypes['Hero'] | null; // Hero
    released: boolean; // Boolean!
    title: string; // String!
  }
  Mutation: { // field return type
    createMovie: NexusGenRootTypes['Movie']; // Movie!
    deleteMovie: NexusGenRootTypes['Movie']; // Movie!
    release: NexusGenRootTypes['Movie'] | null; // Movie
    signupHero: NexusGenRootTypes['Hero']; // Hero!
  }
  Query: { // field return type
    feed: NexusGenRootTypes['Movie'][]; // [Movie!]!
    filterMovies: NexusGenRootTypes['Movie'][]; // [Movie!]!
    movie: NexusGenRootTypes['Movie'] | null; // Movie
  }
}

export interface NexusGenArgTypes {
  Hero: {
    movies: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createMovie: { // args
      description?: string | null; // String
      mainHeroEmail?: string | null; // String
      title?: string | null; // String
    }
    deleteMovie: { // args
      id: string; // ID!
    }
    release: { // args
      id?: string | null; // ID
    }
    signupHero: { // args
      data: NexusGenInputs['HeroCreateInput']; // HeroCreateInput!
    }
  }
  Query: {
    filterMovies: { // args
      searchString?: string | null; // String
    }
    movie: { // args
      where: NexusGenInputs['MovieWhereUniqueInput']; // MovieWhereUniqueInput!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Hero" | "Movie" | "Mutation" | "Query";

export type NexusGenInputNames = "HeroCreateInput" | "MovieCreateManyWithoutMoviesInput" | "MovieCreateWithoutMainHeroInput" | "MovieWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}