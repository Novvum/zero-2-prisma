### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Hero {
  email: String!
  id: ID!
  movies(after: String, before: String, first: Int, last: Int, skip: Int): [Movie!]
  name: String
}

input HeroCreateInput {
  email: String!
  id: ID
  movies: MovieCreateManyWithoutMoviesInput
  name: String
}

type Movie {
  description: String
  id: ID!
  mainHero: Hero
  released: Boolean!
  title: String!
}

input MovieCreateManyWithoutMoviesInput {
  connect: [MovieWhereUniqueInput!]
  create: [MovieCreateWithoutMainHeroInput!]
}

input MovieCreateWithoutMainHeroInput {
  description: String
  id: ID
  released: Boolean!
  title: String!
}

input MovieWhereUniqueInput {
  id: ID
}

type Mutation {
  createMovie(description: String, mainHeroEmail: String, title: String): Movie!
  deleteMovie(id: ID!): Movie!
  release(id: ID): Movie
  signupHero(data: HeroCreateInput!): Hero!
}

type Query {
  feed: [Movie!]!
  filterMovies(searchString: String): [Movie!]!
  movie(where: MovieWhereUniqueInput!): Movie
}
